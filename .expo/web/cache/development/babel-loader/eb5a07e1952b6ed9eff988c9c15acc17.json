{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport TextRecognition from 'react-native-text-recognition';\nimport { launchImageLibrary } from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  useEffect(function () {\n    launchImageLibrary({}, setImage);\n  }, []);\n  useEffect(function () {\n    (function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!image) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(TextRecognition.recognize(image.assets[0].uri));\n\n            case 3:\n              result = _context.sent;\n              console.log(result);\n              setText(result);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [image]);\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(StatusBar, {}), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"text recog\"\n      }), text ? _jsx(Text, {\n        children: text\n      }) : null]\n    })]\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Hp User/CS455proj/App.js"],"names":["React","useState","useEffect","Constants","TextRecognition","launchImageLibrary","App","image","setImage","text","setText","recognize","assets","uri","result","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAAQC,kBAAR,QAAiC,2BAAjC;;;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAK;AAEP,kBAA0BL,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwBP,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AAEdG,IAAAA,kBAAkB,CAAC,EAAD,EAAIG,QAAJ,CAAlB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIK,KADJ;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAG0BH,eAAe,CAACO,SAAhB,CAA0BJ,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgBC,GAA1C,CAH1B;;AAAA;AAGWC,cAAAA,MAHX;AAIKC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAJ,cAAAA,OAAO,CAACI,MAAD,CAAP;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQC,GATM,EAUL,CAACP,KAAD,CAVK,CAAT;AAcN,SACE,MAAC,YAAD;AAAA,eACE,KAAC,SAAD,KADF,EAEE,MAAC,IAAD;AAAA,iBACE,KAAC,IAAD;AAAA;AAAA,QADF,EAEGE,IAAI,GAAC,KAAC,IAAD;AAAA,kBAAOA;AAAP,QAAD,GAAuB,IAF9B;AAAA,MAFF;AAAA,IADF;AAcD,CAtCH;;AAwCA,eAAeH,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { SafeAreaView, StatusBar, Text, View, StyleSheet } from 'react-native';\nimport Constants from 'expo-constants';\nimport TextRecognition from 'react-native-text-recognition';\nimport {launchImageLibrary} from 'react-native-image-picker';\n\n\nconst App = ()=> {\n\n          const [image, setImage] = useState(null);\n          const [text, setText] = useState(null);\n\n          useEffect(() => {\n\n            launchImageLibrary({},setImage);\n          }, []);\n\n          useEffect(() => {\n            (async () => {  \n              if(image)\n                {\n                  const result = await TextRecognition.recognize(image.assets[0].uri);\n                  console.log(result);\n                  setText(result);\n                }})();\n          \n            }\n            , [image]);\n          \n\n\n    return (\n      <SafeAreaView>\n        <StatusBar/>\n        <View>\n          <Text>text recog</Text>\n          {text?<Text>{text}</Text> : null}\n        </View>\n\n      </SafeAreaView>\n\n    )\n          \n  \n  \n  };\n\nexport default App;"]},"metadata":{},"sourceType":"module"}